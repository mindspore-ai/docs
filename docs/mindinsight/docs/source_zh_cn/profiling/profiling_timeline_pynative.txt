Timeline分析
~~~~~~~~~~~~

Timeline组件可以展示：

- 算子分配到哪个设备（ASCEND、HOSTCPU）执行。
- MindSpore对该网络的线程切分策略。
- 算子在Device上的执行序列和执行时长。
- 训练的Step数（只支持数据下沉场景）。
- 算子的\ ``Scope Name``\ 信息，可以选择展示多少层\ ``Scope Name``\ 信息并下载对应的timeline文件。例如某算子的全名为：\ ``Default/network/lenet5/Conv2D-op11``\ ，则该算子的第一层Scope
  Name为\ ``Default``\ 、第二层为\ ``network``\ 。如果选择展示两层\ ``Scope Name``\ 信息，则会展示\ ``Default``\ 和\ ``network``\ 。

通过分析Timeline，用户可以定位到某个算子，查看分析他的执行时间。点击总览页面Timeline部分的下载按钮，可以将Timeline数据文件
(json格式) 保存至本地，再通过工具查看Timeline的详细信息。推荐使用
``chrome://tracing`` 或者 `Perfetto <https://ui.perfetto.dev/#!/>`__
做Timeline展示。

- Chrome tracing：点击左上角“load”加载文件。
- Perfetto：点击左侧“Open trace file”加载文件。

.. figure:: images/timeline_pynative.png
   :alt: timeline_pynative.png

*图：Timeline分析*

Timeline主要包含如下几个部分：

- Device及其stream
  list：包含Device上的stream列表，每个stream由task执行序列组成，一个task是其中的一个小方块，大小代表执行时间长短。

  各个颜色块表示算子执行的起始时间及时长。timeline的详细解释如下：

  - Step：训练迭代数。
  - Ascend Op：在Ascend上执行的算子的时间线。
  - HOSTCPU Op：在HostCPU上执行的算子的时间线。

- 算子信息：选中某个task后，可以显示该task对应算子的信息，包括名称、type等。

可以使用W/A/S/D来放大、缩小地查看Timeline图信息。

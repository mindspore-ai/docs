Preparing the Training Script
-----------------------------

To enable the performance profiling of neural networks, MindSpore
Profiler APIs should be added into the script.

- Before training starts, the MindSpore ``Profiler`` object needs to be
  initialized.

.. note::
   The parameters of Profiler are as follows:
   https://www.mindspore.cn/docs/en/master/api_python/mindspore/mindspore.Profiler.html#mindspore.Profiler

- At the end of the training, ``Profiler.analyse()`` should be called
  to finish profiling and generate the perforamnce analyse results.

The code for a normal scenario is as follows:

.. code:: python

   import numpy as np
   from mindspore import nn
   from mindspore import Model, set_context, PYNATIVE_MODE
   import mindspore.dataset as ds
   from mindspore import Profiler


   class Net(nn.Cell):
       def __init__(self):
           super(Net, self).__init__()
           self.fc = nn.Dense(2, 2)

       def construct(self, x):
           return self.fc(x)


   def generator():
       for i in range(2):
           yield (np.ones([2, 2]).astype(np.float32), np.ones([2]).astype(np.int32))


   def train(net):
       optimizer = nn.Momentum(net.trainable_params(), 1, 0.9)
       loss = nn.SoftmaxCrossEntropyWithLogits(sparse=True)
       data = ds.GeneratorDataset(generator, ["data", "label"])
       model = Model(net, loss, optimizer)
       model.train(1, data)


   if __name__ == '__main__':
       set_context(mode=PYNATIVE_MODE, device_target="Ascend")

       # Init Profiler
       # Note that the Profiler should be initialized before model.train
       profiler = Profiler(output_path = './profiler_data')

       # Train Model
       net = Net()
       train(net)

       # Profiler end
       profiler.analyse()

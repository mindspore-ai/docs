    .. py:method:: probs
        :property:

        Return the event probability.

        **Output**

        Tensor, the event probability.

    .. py:method:: cdf(value, probs)

        Compute the cumulatuve distribution function(CDF) of the given value.

        **Inputs**

        - **value** (Tensor) - the value to compute.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the cumulatuve distribution function for the given input.

    .. py:method:: cross_entropy(dist, probs_b, probs)

        Compute the cross entropy of two distribution 

        **Inputs**

        - **dist** (str) - the type of the other distribution.
        - **probs_b** (Tensor) - the event probability of the other distribution.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the cross entropy.

    .. py:method:: entropy(probs)

        Compute the value of the entropy.

        **Inputs**

        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the entropy.

    .. py:method:: kl_loss(dist, probs)

        Compute the value of the K-L loss between two distribution, namely KL(a||b).

        **Inputs**

        - **dist** (str) - the type of the other distribution.
        - **probs_b** (Tensor) - the event probability of the other distribution.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the K-L loss.

    .. py:method:: log_cdf(value, probs)

        Compute the log value of the cumulatuve distribution function.

        **Inputs**

        - **value** (Tensor) - the value to compute.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the log value of the cumulatuve distribution function.

    .. py:method:: log_prob(value, probs)

        the log value of the probability.

        **Inputs**

        - **value** (Tensor) - the value to compute.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the log value of the probability.

    .. py:method:: log_survival(value, probs)

        Compute the log value of the survival function.

        **Inputs**

        - **value** (Tensor) - the value to compute.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the K-L loss.

    .. py:method:: mean(probs)

        Compute the mean value of the distribution.

        **Inputs**

        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the mean of the distribution.

    .. py:method:: mode(probs)

        Compute the mode value of the distribution.

        **Inputs**

        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the mode of the distribution.

    .. py:method:: prob(value, probs)

        The probability of the given value. For the discrete distribution, it is the probability mass function(pmf).

        **Inputs**

        - **value** (Tensor) - the value to compute.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the probability.

    .. py:method:: sample(shape, probs)

        Generate samples.

        **Inputs**

        - **shape** (tuple) - the shape of the sample.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the sample following the distribution.

    .. py:method:: sd(probs)

        The standard deviation.

        **Inputs**
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the standard deviation of the distribution.

    .. py:method:: survival_function(value, probs)

        Compute the value of the survival function.

        **Inputs**

        - **value** (Tensor) - the value to compute.
        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the value of the survival function.

    .. py:method:: var(probs)

        Compute the variance of the distribution.

        **Inputs**

        - **probs** (Tensor) - the event probability. Default value: None.

        **Output**

        Tensor, the variance of the distribution.
